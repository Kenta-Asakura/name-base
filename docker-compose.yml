services:
  postgres:
    image: postgres:15
    container_name: name-base-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-name_base}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./server
    container_name: name-base-server
    restart: unless-stopped
    env_file:
      - ./server/.env.docker
    ports:
      - "3001:3001"
    volumes:
      - ./server:/app
    depends_on:
      - postgres
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3001"]
      interval: 10s
      timeout: 5s
      retries: 3

  client:
    build:
      context: ./client
    container_name: name-base-client
    restart: unless-stopped
    env_file:
      - ./client/.env.docker
    ports:
      - "5173:5173"
    volumes:
      - ./client:/app
    depends_on:
      - server
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:5173"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  postgres-data:
